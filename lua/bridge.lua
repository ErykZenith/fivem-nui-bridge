local a,b=Citizen.InvokeNative,Citizen.ReturnResultAnyway()local function c(d)return d==0 or not d and nil or tostring(d)end;local function e(f)return Citizen.GetFunctionReference(f)end;iframe={}iframe.__index=iframe;iframe.invoke=setmetatable({},{__index=function(g,h)return function(...)a(0x78608acb,c(json.encode({h,...})),b)end end})function iframe.on(i,j)a(0xc59b980c,c(i),e(j))end;iframe.dataHandlers={}iframe.on("__invoke__.lua.command",function(k,l)if type(k)~="table"or#k<1 then return end;local m=k[1]local n={}for o=2,#k do n[o-1]=k[o]end;local p=iframe.dataHandlers[m]if p then l({p(table.unpack(n))})end end)function iframe.destroyCommand(q)if q then iframe.dataHandlers[q]=nil end end;function iframe.createCommand(r)if not r or type(r)~="table"then error("Handlers must be a table")end;for h,s in pairs(r)do iframe.dataHandlers[h]=s end end