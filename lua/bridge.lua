local a,b=Citizen.InvokeNative,Citizen.ReturnResultAnyway()local function c(d)return d==0 or not d and nil or tostring(d)end;local function e(f)return Citizen.GetFunctionReference(f)end;iframe={}iframe.__index=iframe;iframe.dataHandlers={}iframe.invoke=setmetatable({},{__index=function(g,h)return function(...)a(0x78608acb,c(json.encode({h,...})),b)end end})a(0xc59b980c,c("__invoke__.lua.command"),e(function(i,j)if type(i)~="table"or#i<1 then return end;local k=iframe.dataHandlers[i[1]]if k then j({k(table.unpack(i,2))})end end))function iframe.destroyCommand(l)if l then iframe.dataHandlers[l]=nil end end;function iframe.createCommand(m)if not m or type(m)~="table"then error("Handlers must be a table")end;for h,n in pairs(m)do iframe.dataHandlers[h]=n end end
